title:
  Write the pow function.

author:
  Bogdan Bugarschi

text: |
  Write a function that takes two ints (a and b) and return a to the power of b.
  This is done by multiplying a with itself b times.


  public static *:returnType:* pow( *:typeOfA:* a, *:typeOfB:* b ){
    *:codeBlock1:*;
    *:codeBlock2:* {
      *:codeBlock3:*;
    }
    *:codeBlock4:*;
  }


  
choices:
  returnType: 
    dropdown: ["double", "float", "void", "int"]
  typeOfA: 
    dropdown: ["int", "double", "float", "void"]
  typeOfB: 
    dropdown: ["int", "double", "float", "void"]
  codeBlock1: 
    dropdown: ["int result = 0", "int result = 1", "result = 1", "result = 0"]
  codeBlock2: 
    dropdown: ["for(int i = 1; i < b; i++)", "for(int i = 0; i < b; i++)", "for(int i = 0; i < b.length; i++)", "for(int i = 0; i < b; i--)"]
  codeBlock3: 
    dropdown: ["result = b", "result = a", "result *= a", "result *= b"]
  codeBlock4: 
    dropdown: ["return a", "return b", "return result", "return i"]




# The 'answers' tag must contain the same keys a the 'choises' tag, but the value should be the expected answer.
# Again everything is string that will be trimmed.
# a question is considered correct if all answers provided by the student are correct
#
answers:
  returnType: "int"
  typeOfA: "int"
  typeOfB: "int"
  codeBlock1: "int result = 1"
  codeBlock2: "for(int i = 0; i < b; i++)"
  codeBlock3: "result *= a"
  codeBlock4: "return result"


explanation: |
  The question states that the 'pow' function takes two ints as arguments.
  From this we can infer that 'int' is the return type.
  we can also infer that 'int' should be the return type of the accumumator.
  
  we start the function by initiallizing a accumulator (called result) to the value 1
  we loop b time,
  and on each iteration we multiply result with the value of a.

  after the loop we return the result.
  
  so our function becomes

    public static int pow(int a, int b){
        int result = 1;
        for(int i = 0; i < b; i++){
            result *= a;
        }
        return result;
    }
